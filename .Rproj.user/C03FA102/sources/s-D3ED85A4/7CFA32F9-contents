mydata <- rnorm(10000, 0, 1)

likelihood <- function(x, param){
  dnorm(x, param[1], param[2], log=TRUE)
}

prior <- function(param){
  dnorm(param[1], 0, 1, log = TRUE)+dgamma(param[2], 1, 1, log = TRUE)
}

iter <- 5000
burnin <- 1000
chains <- 20
nparam <- 2

store <- array(NA, dim = c(nparam, chains, iter))

store[1, , 1] <- rnorm(chains, 0, 1)
store[2, , 1] <- rgamma(chains, 1, 1)

for(i in 2:iter){
  cat(i," ")
  for(j in 1:chains){
    tmp1 <- sum(likelihood(mydata, store[, j, i-1])) + prior(store[, j, i-1])
    proposal <- store[, j, i-1] + rnorm(2, 0, 0.2)
    tmp2 <- sum(likelihood(mydata, proposal))+prior(proposal)
    if(!is.finite(tmp2)) tmp2 <- -Inf
    if(exp(tmp2-tmp1) > runif(1, 0, 1)){
      store[, j, i] <- proposal
    } else {
      store[, j, i] <- store[, j, i-1]
    }
  }
}
