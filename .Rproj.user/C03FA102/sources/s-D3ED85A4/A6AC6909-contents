#### Figure: Average sample sizes for one-sided tests ####

# Load simulation results and packages
load("Sim_DirectionalSBF/resBFDADirectional.RData")
load("Sim_DirectionalSBF/resBFDADirectionalCauchy.RData")
load("Sim_DirectionalSPRT/resSPRTDirectional.RData")
load("Sim_DirectionalSBF/conditionsSBFDirectional.RData")
load("Sim_DirectionalSPRT/conditionsSPRTDirectional.RData")

# Extract relevant simulation results (where true.ES = 0 or ES.H1)
simsSBF <- resBFDADirectional[conditions[,1] == conditions[,2]]
simsSBF0 <- resBFDADirectional[conditions[,1] == 0]

mu.true <- unique(conditions[,2])
simsCauchy <- resBFDADirectionalCauchy[seq(0, 1, by = 0.1) %in% mu.true]
simsCauchy0 <- resBFDADirectionalCauchy[1]

simsSPRT <- resSPRTDirectional[conditionsSPRT[,1] == conditionsSPRT[,2]]
simsSPRT0 <- resSPRTDirectional[conditionsSPRT[,1] == 0]

#### Data preparation for: Same Bounds ####

# Definition of the bounds
beta <- 0.1
alpha = 0.05
A <- (1-beta)/alpha
B <- beta/(1-alpha)

bounds <- c(B, A)

# Data for plot SBF

dat.SBF <- conditions[conditions[,1] == conditions[,2],]
for(i in 1:nrow(dat.SBF)){
  tmp <- BFDA.analyze(simsSBF[[i]], 
                      design = "sequential", 
                      boundary = bounds, 
                      n.min = 10, 
                      n.max = Inf)
  dat.SBF[i,4] <- mean(tmp$endpoint.n)
  dat.SBF[i,5] <- tmp$lower.hit.frac
}
names(dat.SBF) <- c("mu.true", "mu.H1", "prior.variance", "ASS", "FN.rate")

dat.SBF0 <- conditions[conditions[,1] == 0,]
for(i in 1:nrow(dat.SBF0)){
  tmp <- BFDA.analyze(simsSBF0[[i]], 
                      design = "sequential", 
                      boundary = bounds, 
                      n.min = 10, 
                      n.max = Inf)
  dat.SBF0[i,4] <- mean(tmp$endpoint.n)
  dat.SBF0[i,5] <- tmp$upper.hit.frac
}
names(dat.SBF0) <- c("mu.true", "mu.H1", "prior.variance", "ASS", "FP.rate")

# Data for plot SBF Cauchy

dat.SBFCauchy <- matrix(mu.true, ncol = 3, nrow = length(mu.true))
for(i in 1:nrow(dat.SBFCauchy)){
  tmp <- BFDA.analyze(simsCauchy[[i]], 
                      design = "sequential", 
                      boundary = bounds, 
                      n.min = 10, 
                      n.max = Inf)
  dat.SBFCauchy[i,2] <- mean(tmp$endpoint.n)
  dat.SBFCauchy[i,3] <- tmp$lower.hit.frac
}
colnames(dat.SBFCauchy) <- c("mu.true", "ASS", "FN.rate")

dat.SBFCauchy0 <- matrix(0, ncol = 3, nrow = 1)
tmp <- BFDA.analyze(simsCauchy0[[1]], 
                    design = "sequential", 
                    boundary = bounds, 
                    n.min = 10, 
                    n.max = Inf)
dat.SBFCauchy0[1,2] <- mean(tmp$endpoint.n)
dat.SBFCauchy0[1,3] <- tmp$upper.hit.frac

colnames(dat.SBFCauchy0) <- c("mu.true", "ASS", "FP.rate")

# Data for plot SPRT

dat.SPRT <- conditionsSPRT[conditionsSPRT[,1] == conditionsSPRT[,2], ]
for(i in 1:nrow(dat.SPRT)){
  dat.SPRT[i,3] <- mean(simsSPRT[[i]][,1])
  dat.SPRT[i,4] <- sum(simsSPRT[[i]][,2] == "2")/1000
}
colnames(dat.SPRT) <- c("mu.true", "mu.H1", "ASS", "FN.rate")

dat.SPRT0 <- conditionsSPRT[conditionsSPRT[,1] == 0, ]
for(i in 1:nrow(dat.SPRT0)){
  dat.SPRT0[i,3] <- mean(simsSPRT0[[i]][,1])
  dat.SPRT0[i,4] <- sum(simsSPRT0[[i]][,2] == "1")/1000
}
colnames(dat.SPRT0) <- c("mu.true", "mu.H1", "ASS", "FP.rate")



#### Data preparation for: Same Error Rates ####

source("AverageSS_Directional/optbounds.R")
FN.rates <- dat.SPRT$FN.rate
FP.rates <- dat.SPRT0$FP.rate

# SBF Design #

dat.SBF.SameER <- conditions[conditions[,1] == conditions[,2],]
dat.SBF.SameER$FN.rates <- rep(FN.rates, 3)
dat.SBF.SameER$FP.rates <- rep(FP.rates, 3)

for(i in 1:9){
  bounds <- optbounds(sim.H0 = simsSBF0[[i]]$sim, 
                      sim.H1 = simsSBF[[i]]$sim,
                      max.FP = dat.SBF.SameER[i, 5],
                      max.FN = dat.SBF.SameER[i, 4], 
                      nG = 150)
  dat.SBF.SameER[i, 6:7] <- bounds
  
}

bounds <- optbounds(sim.H0 = simsSBF0[[9]]$sim, 
                    sim.H1 = simsSBF[[9]]$sim,
                    max.FP = dat.SBF.SameER[9, 5],
                    max.FN = dat.SBF.SameER[9, 4], 
                    nG = 200) # redo boundary calculation for mu = 0.8 with more iterations to improve accuracy (nG)
dat.SBF.SameER[9, 6:7] <- bounds

for(i in 1:9){
  tmp <- BFDA.analyze(simsSBF[[i]], 
                      design = "sequential", 
                      boundary = simplify2array(dat.SBF.SameER[i, 6:7]), 
                      n.min = 10, 
                      n.max = Inf)
  tmp0 <- BFDA.analyze(simsSBF0[[i]], 
                      design = "sequential", 
                      boundary = simplify2array(dat.SBF.SameER[i, 6:7]), 
                      n.min = 10, 
                      n.max = Inf)
  dat.SBF.SameER[i,8] <- mean(tmp$endpoint.n)
  dat.SBF.SameER[i,9] <- tmp$lower.hit.frac
  dat.SBF.SameER[i,10] <- mean(tmp0$endpoint.n)
  dat.SBF.SameER[i,11] <- tmp0$upper.hit.frac

}

colnames(dat.SBF.SameER) <- c("mu.true", "mu.H1", "prior.variance", "FN.rates",
                              "FP.rates", "lower", "upper", "ASS.H1", 
                              "FN.rate.real", "ASS.H0", "FP.rate.real")

save(dat.SBF.SameER, file = "AverageSS_Directional/dat.SBF.SameER.RData") 

# Cauchy # 

dat.SBFCauchy.SameER <- data.frame(mu.true=mu.true)
dat.SBFCauchy.SameER$FN.rates <- FN.rates
dat.SBFCauchy.SameER$FP.rates <- FP.rates

for(i in 1:3){
  bounds <- optbounds(sim.H0 = simsCauchy0[[1]]$sim, 
                      sim.H1 = simsCauchy[[i]]$sim,
                      max.FP = dat.SBFCauchy.SameER[i, 3],
                      max.FN = dat.SBFCauchy.SameER[i, 2], 
                      nG = 100)
  dat.SBFCauchy.SameER[i, 4:5] <- bounds
  
}

for(i in 1:3){
  tmp <- BFDA.analyze(simsCauchy[[i]], 
                      design = "sequential", 
                      boundary = simplify2array(dat.SBFCauchy.SameER[i, 4:5]), 
                      n.min = 10, 
                      n.max = Inf)
  tmp0 <- BFDA.analyze(simsCauchy0[[1]], 
                       design = "sequential", 
                       boundary = simplify2array(dat.SBFCauchy.SameER[i, 4:5]), 
                       n.min = 10, 
                       n.max = Inf)
  dat.SBFCauchy.SameER[i,6] <- mean(tmp$endpoint.n)
  dat.SBFCauchy.SameER[i,7] <- tmp$lower.hit.frac
  dat.SBFCauchy.SameER[i,8] <- mean(tmp0$endpoint.n)
  dat.SBFCauchy.SameER[i,9] <- tmp0$upper.hit.frac
  
}

colnames(dat.SBFCauchy.SameER) <- c("mu.true", "FN.rates",
                              "FP.rates", "lower", "upper", "ASS.H1", 
                              "FN.rate.real", "ASS.H0", "FP.rate.real")

save(dat.SBFCauchy.SameER, file = "AverageSS_Directional/dat.SBFCauchy.SameER.RData")


#### Plots ####

pdf(file = "AverageSS_Directional/ASSDirectionalPlot.pdf",
    width =  8.95,
    height = 12)

# ASS H1

cols <- c("black", "darkgrey", "lightgrey")
priorwidth <- c(0.3, 0.1, 0.001)
par(mfrow=c(5,2), mar = c(5, 4.1, 1, 2.1), oma = c(4, 1, 3, 0), family = "Helvetica-Narrow")

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 400))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF[dat.SBF$prior.variance == priorwidth[i], ]$mu.true,
         dat.SBF[dat.SBF$prior.variance == priorwidth[i], ]$ASS,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy[,1], dat.SBFCauchy[,2], pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT$ASS, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.7)
mtext("Average Sample Size H1", side = 2, line = 3, cex = 1)
mtext("Same Boundaries", side = 3, outer = TRUE, at = 0.25)

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 400))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.true,
         dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$ASS.H1,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy.SameER$mu.true, dat.SBFCauchy.SameER$ASS.H1, pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT$ASS, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.5)
mtext("Same Error Rates", side = 3, outer = TRUE, at = 0.75)

# ASS H0

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 715))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF0[dat.SBF0$prior.variance == priorwidth[i], ]$mu.H1,
         dat.SBF0[dat.SBF0$prior.variance == priorwidth[i], ]$ASS,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy[,1], rep(dat.SBFCauchy0[,2], 3), pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT0$ASS, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.5)
mtext("Average Sample Size H0", side = 2, line = 3, cex = 1)

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 715))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.H1,
         dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$ASS.H0,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy.SameER$mu.true, dat.SBFCauchy.SameER$ASS.H0, pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT0$ASS, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.5)

# Bounds

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = log(c(1/20, 20)))
axis(side = 2, las = 1, at = log(c(1/20, 1/10, 1/3, 1, 3, 10, 20)), labels = c("1/20", "1/10", "1/3", "1", "3", "10", "20"))
axis(side = 1, at = c(0.2, 0.5, 0.8))
abline(h = log(A), lwd = 0.5)
abline(h = log(1), lty = "dotted")
abline(h = log(B), lwd = 0.5)
mtext("Boundaries", side = 2, line = 3, cex = 1)

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = log(c(1/22, 22)))
axis(side = 2, las = 1, at = log(c(1/20, 1/10, 1/3, 1, 3, 10, 20)), labels = c("1/20", "1/10", "1/3", "1", "3", "10", "20"))
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.H1,
         log(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$lower),
         pch = 19, col = cols[i], cex = 1.2)
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.H1,
         log(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$upper),
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy.SameER$mu.true, log(dat.SBFCauchy.SameER$lower),
       pch = 15, cex = 1.2)
points(dat.SBFCauchy.SameER$mu.true, log(dat.SBFCauchy.SameER$upper),
       pch = 15, cex = 1.2)
points(mu.true, rep(log(A), 3), pch = 4)
points(mu.true, rep(log(B), 3), pch = 4)
abline(h = log(A), lty = "dashed", lwd = 0.5)
abline(h = log(1), lty = "dotted")
abline(h = log(B), lty = "dashed", lwd = 0.5)

# FN rates

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 0.12))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF[dat.SBF$prior.variance == priorwidth[i], ]$mu.true,
         dat.SBF[dat.SBF$prior.variance == priorwidth[i], ]$FN.rate,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy[,1], dat.SBFCauchy[,3], pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT$FN.rate, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.5)
abline(h = 0.1, lty = "dotted") 
mtext("FN Rates", side = 2, line = 3, cex = 1)

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 0.12))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.true,
         dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$FN.rate.real,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy.SameER$mu.true, dat.SBFCauchy.SameER$FN.rate.real, pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT$FN.rate, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.5, line = 2.5)
abline(h = 0.1, lty = "dotted")

# FP rates

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 0.12))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF0[dat.SBF0$prior.variance == priorwidth[i], ]$mu.H1,
         dat.SBF0[dat.SBF0$prior.variance == priorwidth[i], ]$FP.rate,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy[,1], rep(dat.SBFCauchy0[,3], 3), pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT0$FP.rate, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.3, line = 2.5)
abline(h = 0.05, lty = "dotted")
mtext("FP Rates", side = 2, line = 3, cex = 1)
legend(x = 0.08, y = -0.07,
       legend = c("Symbols:", "SBF with Cauchy prior", "SBF with Normal prior", "SPRT"),
       pch = c(16, 0, 1, 4), bty = "n", horiz = TRUE,
       xpd = NA, col = c("white", rep("black", 3)), adj = 0,
       text.width = c(0.11, 0.16, 0.16, 0.16))
legend(x = 0.08, y = -0.055,
       legend = c("Prior Variance: ", expression(sigma^2*" = 0.3"), expression(sigma^2* " = 0.1"),
                  expression(sigma^2*" = 0.001")),
       pch = c(16, 19, 19, 19), col = c("white", "black", "darkgrey", "lightgrey"),
       bty = "n", horiz = TRUE, xpd=NA, adj = 0, text.width = c(0.11, 0.16, 0.16, 0.16)) 

plot.new()
plot.window(xlim = c(0.2, 0.8), ylim = c(0, 0.12))
axis(side = 2, las = 1)
axis(side = 1, at = c(0.2, 0.5, 0.8))
for(i in 1:3){
  points(dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$mu.H1,
         dat.SBF.SameER[dat.SBF.SameER$prior.variance == priorwidth[i], ]$FP.rate.real,
         pch = 19, col = cols[i], cex = 1.2)
}
points(dat.SBFCauchy.SameER$mu.true, dat.SBFCauchy.SameER$FP.rate.real, pch = 15, cex = 1.2)
points(dat.SPRT$mu.true, dat.SPRT0$FP.rate, pch = 4, cex = 1.2)
title(xlab = bquote(delta["H1"]), cex.lab = 1.3, line = 2.5)
abline(h = 0.05, lty = "dotted")

dev.off()
